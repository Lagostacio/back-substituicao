// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id      Int      @id @default(autoincrement())
  login   String
  senha   String
  papel   String
  docente Docente?
}

model Docente {
  id                 Int                  @id @default(autoincrement())
  siape              String
  nome               String
  usuario            Usuario              @relation(fields: [usuarioId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  usuarioId          Int                  @unique
  chefia             Chefia?
  coordenador        Coordenador?
  docenteCicloLetivo DocenteCicloLetivo[]
  oferta             Oferta[]
  solicitacoes       Solicitacao[]        @relation("docenteSolicitante")
  substituicoes      Solicitacao[]        @relation("docenteSubstituto")
}

model Chefia {
  id          Int           @id @default(autoincrement())
  inicio      DateTime
  fim         DateTime
  nivel       String
  docente     Docente       @relation(fields: [docenteId], references: [id], onDelete: Cascade)
  docenteId   Int           @unique
  solicitacao Solicitacao[]
}

model Curso {
  id          Int          @id @default(autoincrement())
  nome        String
  coordenador Coordenador?
  turma       Turma[]
}

model Turma {
  id          Int           @id @default(autoincrement())
  nome        String
  curso       Curso         @relation(fields: [cursoId], references: [id], onDelete: Cascade)
  cursoId     Int
  Oferta      Oferta[]
  Solicitacao Solicitacao[]
}

model Coordenador {
  id          Int           @id @default(autoincrement())
  inicio      DateTime
  fim         DateTime
  curso       Curso         @relation(fields: [cursoId], references: [id])
  cursoId     Int           @unique
  docente     Docente       @relation(fields: [docenteId], references: [id], onDelete: Cascade)
  docenteId   Int           @unique
  Solicitacao Solicitacao[]
}

model Disciplina {
  id            Int           @id @default(autoincrement())
  nome          String
  Oferta        Oferta[]
  solicitacoes  Solicitacao[] @relation("disciplinaSolicitante")
  substituicoes Solicitacao[] @relation("disciplinaSubstituta")
}

model CicloLetivo {
  id                 Int                  @id @default(autoincrement())
  ano                String
  semestre           Int
  inicio             DateTime
  fim                DateTime
  docenteCicloLetivo DocenteCicloLetivo[]
  Oferta             Oferta[]
  Solicitacao        Solicitacao[]
}

model DocenteCicloLetivo {
  docente       Docente     @relation(fields: [docenteId], references: [id])
  docenteId     Int
  cicloLetivo   CicloLetivo @relation(fields: [cicloLetivoId], references: [id])
  cicloLetivoId Int
  nivel         String

  @@id(fields: [docenteId, cicloLetivoId])
}

model Oferta {
  docente       Docente     @relation(fields: [docenteId], references: [id])
  docenteId     Int
  turma         Turma       @relation(fields: [turmaId], references: [id])
  turmaId       Int
  cicloLetivo   CicloLetivo @relation(fields: [cicloLetivoId], references: [id])
  cicloLetivoId Int
  disciplina    Disciplina  @relation(fields: [disciplinaId], references: [id])
  disciplinaId  Int

  @@id(fields: [docenteId, turmaId, cicloLetivoId, disciplinaId])
}

model Solicitacao {
  id                     Int         @id @default(autoincrement())
  data                   DateTime
  hora                   DateTime
  justificativa          String
  anexo                  String
  tipo                   String
  cienciaSubstituto      Boolean
  dataDevolucao          DateTime?
  autorizacaoChefia      Boolean
  cienciaChefia          Boolean
  cienciaCoordenador     Boolean
  docenteSolicitante     Docente     @relation("docenteSolicitante", fields: [docenteSolicitanteId], references: [id])
  docenteSolicitanteId   Int
  docenteSubstituto      Docente     @relation("docenteSubstituto", fields: [docenteSubstitutoId], references: [id])
  docenteSubstitutoId    Int
  cicloLetivo            CicloLetivo @relation(fields: [cicloLetivoId], references: [id])
  cicloLetivoId          Int
  disciplina             Disciplina  @relation("disciplinaSolicitante", fields: [disciplinaId], references: [id])
  disciplinaId           Int
  turma                  Turma       @relation(fields: [turmaId], references: [id])
  turmaId                Int
  disciplinaSubstituta   Disciplina?  @relation("disciplinaSubstituta", fields: [disciplinaSubstitutaId], references: [id])
  disciplinaSubstitutaId Int?
  chefia                 Chefia      @relation(fields: [chefiaId], references: [id])
  chefiaId               Int
  coordenador            Coordenador @relation(fields: [coordenadorId], references: [id])
  coordenadorId          Int
}
